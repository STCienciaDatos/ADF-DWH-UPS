{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "ADFWH-UPS"
		},
		"CONNECT_REPLICA_PROD_UPS_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'CONNECT_REPLICA_PROD_UPS'"
		},
		"PostgreSql1_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'PostgreSql1'"
		},
		"CONNECT_REPLICA_PROD_UPS_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "localhost"
		},
		"CONNECT_REPLICA_PROD_UPS_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "db_replicaprod_fdw"
		},
		"CONNECT_REPLICA_PROD_UPS_properties_typeProperties_username": {
			"type": "string",
			"defaultValue": "postgres"
		},
		"PostgreSql1_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "localhost"
		},
		"PostgreSql1_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "postgres"
		},
		"PostgreSql1_properties_typeProperties_username": {
			"type": "string",
			"defaultValue": "postgres"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/FAC_INSCRIPCION_PARQUET')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "FAC_INSCRIPCION"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "FAC_INSCRIPCION.parquet",
						"folderPath": "vdirectory_fac_inscripcion ",
						"container": "container-ins-mat"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/FAC_INSTITUCION_FINAL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "FAC_INSTITUCION_PROCEDENCIA"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "FAC_INSTITUCION_FINAL.parquet",
						"folderPath": "vdirectory_fac_institucion",
						"container": "container-ins-mat"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/FAC_INSTITUCION_PARQUET')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "FAC_INSTITUCION_PROCEDENCIA"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "FAC_INSTITUCION.parquet",
						"folderPath": "vdirectory_fac_institucion",
						"container": "container-ins-mat"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/FAC_MATRICULA_PARQUET')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "FAC_MATRICULA"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "FAC_MATRICULA.parquet",
						"folderPath": "vdirectory_fac_matricula",
						"container": "container-ins-mat"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/FAC_SOCIOECONOMICA_PARQUET')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "FAC_SOCIOECONOMICA_POSTULANTE"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "FAC_SOCIOECONOMICA.parquet",
						"folderPath": "vdirectory_fac_socioeconomica",
						"container": "container-ins-mat"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CONNECT_REPLICA_PROD_UPS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "CONEXIÃ“N REPLICA PROD",
				"annotations": [],
				"type": "PostgreSqlV2",
				"typeProperties": {
					"server": "[parameters('CONNECT_REPLICA_PROD_UPS_properties_typeProperties_server')]",
					"port": 5432,
					"database": "[parameters('CONNECT_REPLICA_PROD_UPS_properties_typeProperties_database')]",
					"username": "[parameters('CONNECT_REPLICA_PROD_UPS_properties_typeProperties_username')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('CONNECT_REPLICA_PROD_UPS_password')]"
					},
					"sslMode": 2,
					"authenticationType": "Basic"
				},
				"connectVia": {
					"referenceName": "IntegrationRuntimeCD",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PostgreSql1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "PostgreSqlV2",
				"typeProperties": {
					"server": "[parameters('PostgreSql1_properties_typeProperties_server')]",
					"port": 5432,
					"database": "[parameters('PostgreSql1_properties_typeProperties_database')]",
					"username": "[parameters('PostgreSql1_properties_typeProperties_username')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('PostgreSql1_password')]"
					},
					"sslMode": 2,
					"authenticationType": "Basic",
					"connectionTimeout": 120,
					"pooling": true
				},
				"connectVia": {
					"referenceName": "IntegrationRuntimeCD",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/quitaDuplicados_InsertaDim')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "dwh_lookup.dim_postulante_alumno_lookup"
							},
							{
								"name": "Destination",
								"value": "dwh_ups.dim_postulante_alumno"
							}
						],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": "SELECT DISTINCT ON (codigo_interno_pos_alu)\n    codigo_interno_pos_alu,\n    tipo_identificacion,\n    nro_identificacion,\n    nombres,\n    apellidos,\n    correo_personal,\n    correo_institucional,\n    genero,\n    etnia,\n    estado_civil,\n    fecha_nacimiento,\n    telefono,\n    celular,\n    indicador_extranjero,\n    nacionalidad,\n    indicador_discapacidad,\n    indicador_enfermedad_catastrofica,\n    indicador_nec_esp_aprendizaje,\n    fecha_adicion,\n    fecha_modificacion,\n    pais_nacimiento,\n    region_nacimiento,\n    provincia_nacimiento,\n    ciudad_nacimiento,\n    parroquia_nacimiento,\n    pais_residencia,\n    region_residencia,\n    provincia_residencia,\n    ciudad_residencia,\n    parroquia_residencia,\n    direccion_calle_principal,\n    direccion_calle_secundaria,\n    barrio_sector,\n    hash,\n    fecha_ultima_modificacion,\n    linaje\nFROM dwh_lookup.dim_postulante_alumno_lookup\nORDER BY codigo_interno_pos_alu, fecha_ultima_modificacion DESC;",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzurePostgreSqlSink",
								"writeBatchSize": 1000000,
								"writeBatchTimeout": "00:30:00",
								"writeMethod": "CopyCommand"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "codigo_interno_pos_alu",
											"type": "Decimal",
											"physicalType": "numeric"
										},
										"sink": {
											"name": "codigo_interno_pos_alu",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "tipo_identificacion",
											"type": "String",
											"physicalType": "character varying"
										},
										"sink": {
											"name": "tipo_identificacion",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "nro_identificacion",
											"type": "String",
											"physicalType": "character varying"
										},
										"sink": {
											"name": "nro_identificacion",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "nombres",
											"type": "String",
											"physicalType": "character varying"
										},
										"sink": {
											"name": "nombres",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "apellidos",
											"type": "String",
											"physicalType": "character varying"
										},
										"sink": {
											"name": "apellidos",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "correo_personal",
											"type": "String",
											"physicalType": "character varying"
										},
										"sink": {
											"name": "correo_personal",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "correo_institucional",
											"type": "String",
											"physicalType": "character varying"
										},
										"sink": {
											"name": "correo_institucional",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "genero",
											"type": "String",
											"physicalType": "character varying"
										},
										"sink": {
											"name": "genero",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "etnia",
											"type": "String",
											"physicalType": "character varying"
										},
										"sink": {
											"name": "etnia",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "estado_civil",
											"type": "String",
											"physicalType": "character varying"
										},
										"sink": {
											"name": "estado_civil",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "fecha_nacimiento",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "fecha_nacimiento",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "telefono",
											"type": "String",
											"physicalType": "character varying"
										},
										"sink": {
											"name": "telefono",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "celular",
											"type": "String",
											"physicalType": "character varying"
										},
										"sink": {
											"name": "celular",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "indicador_extranjero",
											"type": "Boolean",
											"physicalType": "boolean"
										},
										"sink": {
											"name": "indicador_extranjero",
											"type": "Boolean",
											"physicalType": "boolean"
										}
									},
									{
										"source": {
											"name": "nacionalidad",
											"type": "String",
											"physicalType": "character varying"
										},
										"sink": {
											"name": "nacionalidad",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "indicador_discapacidad",
											"type": "Boolean",
											"physicalType": "boolean"
										},
										"sink": {
											"name": "indicador_discapacidad",
											"type": "Boolean",
											"physicalType": "boolean"
										}
									},
									{
										"source": {
											"name": "indicador_enfermedad_catastrofica",
											"type": "Boolean",
											"physicalType": "boolean"
										},
										"sink": {
											"name": "indicador_enfermedad_catastrofica",
											"type": "Boolean",
											"physicalType": "boolean"
										}
									},
									{
										"source": {
											"name": "indicador_nec_esp_aprendizaje",
											"type": "Boolean",
											"physicalType": "boolean"
										},
										"sink": {
											"name": "indicador_nec_esp_aprendizaje",
											"type": "Boolean",
											"physicalType": "boolean"
										}
									},
									{
										"source": {
											"name": "fecha_adicion",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "fecha_adicion",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "fecha_modificacion",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "fecha_modificacion",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "pais_nacimiento",
											"type": "String",
											"physicalType": "character varying"
										},
										"sink": {
											"name": "pais_nacimiento",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "region_nacimiento",
											"type": "String",
											"physicalType": "character varying"
										},
										"sink": {
											"name": "region_nacimiento",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "provincia_nacimiento",
											"type": "String",
											"physicalType": "character varying"
										},
										"sink": {
											"name": "provincia_nacimiento",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ciudad_nacimiento",
											"type": "String",
											"physicalType": "character varying"
										},
										"sink": {
											"name": "ciudad_nacimiento",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "parroquia_nacimiento",
											"type": "String",
											"physicalType": "character varying"
										},
										"sink": {
											"name": "parroquia_nacimiento",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "pais_residencia",
											"type": "String",
											"physicalType": "character varying"
										},
										"sink": {
											"name": "pais_residencia",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "region_residencia",
											"type": "String",
											"physicalType": "character varying"
										},
										"sink": {
											"name": "region_residencia",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "provincia_residencia",
											"type": "String",
											"physicalType": "character varying"
										},
										"sink": {
											"name": "provincia_residencia",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "ciudad_residencia",
											"type": "String",
											"physicalType": "character varying"
										},
										"sink": {
											"name": "ciudad_residencia",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "parroquia_residencia",
											"type": "String",
											"physicalType": "character varying"
										},
										"sink": {
											"name": "parroquia_residencia",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "direccion_calle_principal",
											"type": "String",
											"physicalType": "character varying"
										},
										"sink": {
											"name": "direccion_calle_principal",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "direccion_calle_secundaria",
											"type": "String",
											"physicalType": "character varying"
										},
										"sink": {
											"name": "direccion_calle_secundaria",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "barrio_sector",
											"type": "String",
											"physicalType": "character varying"
										},
										"sink": {
											"name": "barrio_sector",
											"type": "String",
											"physicalType": "character varying"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AZ_PG_POSTULANTE_ALUMNO_LOOKUPS",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AZURE_DWH_POS_ALU",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "IngestaDimDepurada"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/VIEW_DIM_INSTITUCION_EDUCATIVA')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "CONNECT_REPLICA_PROD_UPS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "PostgreSqlV2Table",
				"schema": [],
				"typeProperties": {
					"schema": "REPLICA_SCHEMA",
					"table": "FT_DIM_INSTITUCION_EDUCATIVA"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/CONNECT_REPLICA_PROD_UPS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/VIEW_DIM_PERIODO')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "CONNECT_REPLICA_PROD_UPS",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "SRV_MIRROR"
				},
				"annotations": [],
				"type": "PostgreSqlV2Table",
				"schema": [],
				"typeProperties": {
					"schema": "REPLICA_SCHEMA",
					"table": "VIEW_DIM_PERIODO"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/CONNECT_REPLICA_PROD_UPS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/VIEW_DIM_POSTULANTE')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "CONNECT_REPLICA_PROD_UPS",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "SRV_MIRROR"
				},
				"annotations": [],
				"type": "PostgreSqlV2Table",
				"schema": [],
				"typeProperties": {
					"schema": "REPLICA_SCHEMA",
					"table": "VIEW_DIM_POSTULANTE_ALUMNO"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/CONNECT_REPLICA_PROD_UPS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/VIEW_DIM_SOCIOECONOMICA')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "CONNECT_REPLICA_PROD_UPS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "PostgreSqlV2Table",
				"schema": [],
				"typeProperties": {
					"schema": "REPLICA_SCHEMA",
					"table": "FT_DIM_CLASIFICACION_SOCIOECONOMICA"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/CONNECT_REPLICA_PROD_UPS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/VIEW_FACT_INSCRIPCION')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "CONNECT_REPLICA_PROD_UPS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "PostgreSqlV2Table",
				"schema": [],
				"typeProperties": {
					"schema": "REPLICA_SCHEMA",
					"table": "FT_FAC_INSCRIPCION"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/CONNECT_REPLICA_PROD_UPS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/VIEW_FACT_MATRICULA')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "CONNECT_REPLICA_PROD_UPS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "PostgreSqlV2Table",
				"schema": [],
				"typeProperties": {
					"schema": "REPLICA_SCHEMA",
					"table": "FT_FAC_MATRICULA_PAGOS"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/CONNECT_REPLICA_PROD_UPS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/VIEW_FACT_SOCIOECONOMICA')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "CONNECT_REPLICA_PROD_UPS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "PostgreSqlV2Table",
				"schema": [],
				"typeProperties": {
					"schema": "REPLICA_SCHEMA",
					"table": "FT_FAC_CLA_SOCIOECONOMICA_POS_ALU"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/CONNECT_REPLICA_PROD_UPS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/VIEW_FAC_INSTITUCION_EDUCATIVA')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "CONNECT_REPLICA_PROD_UPS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "PostgreSqlV2Table",
				"schema": [],
				"typeProperties": {
					"schema": "REPLICA_SCHEMA",
					"table": "FT_DIM_INS_EDU_PROCEDENCIA"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/CONNECT_REPLICA_PROD_UPS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/VIEW_PROGRAMA_ACADEMICO')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "CONNECT_REPLICA_PROD_UPS",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "SRV_MIRROR"
				},
				"annotations": [],
				"type": "PostgreSqlV2Table",
				"schema": [],
				"typeProperties": {
					"schema": "REPLICA_SCHEMA",
					"table": "VIEW_DIM_PROGRAMA_ACADEMICO"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/CONNECT_REPLICA_PROD_UPS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_institucion')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "DF_INSCRIPCIONES_MATRICULAS/DIM_INSTITUCION_EDUCATIVA"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DIM_INSTITUCION_PARQUET",
								"type": "DatasetReference"
							},
							"name": "source"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DIM_INSTITUCION_PARQUET",
								"type": "DatasetReference"
							},
							"name": "sink1",
							"description": "Export data to DIM_PERIODO_PARQUET"
						}
					],
					"transformations": [
						{
							"name": "derivedColumn"
						},
						{
							"name": "definciontipodecampo"
						},
						{
							"name": "actualizacionycreaciondelhash"
						},
						{
							"name": "verificaciondeduplicados"
						}
					],
					"scriptLines": [
						"source(output(",
						"          CODIGO_INTERNO_INS_EDU as decimal(38,18),",
						"          INSTITUCION_EDUCATIVA as string,",
						"          CATEGORIA_INSTITUCION as string,",
						"          TIPO_INSTITUCION as string,",
						"          PAIS_INS_EDU as string,",
						"          PROVINCIA_INS_EDU as string,",
						"          CIUDAD_INS_EDU as string,",
						"          NIVEL_INS_EDU as string,",
						"          AUD_FECHA_ADICION as timestamp,",
						"          AUD_FECHA_MODIFICACION as timestamp",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> source",
						"source derive(CODIGO_INTERNO_INS_EDU = iifNull(CODIGO_INTERNO_INS_EDU, -1),",
						"          INSTITUCION_EDUCATIVA = iifNull(INSTITUCION_EDUCATIVA, \"SIN DATO\"),",
						"          CATEGORIA_INSTITUCION = iifNull(CATEGORIA_INSTITUCION, \"SIN DATO\"),",
						"          TIPO_INSTITUCION = iifNull(TIPO_INSTITUCION, \"SIN DATO\"),",
						"          PAIS_INS_EDU = iifNull(PAIS_INS_EDU, \"SIN DATO\"),",
						"          PROVINCIA_INS_EDU = iifNull(PROVINCIA_INS_EDU, \"SIN DATO\"),",
						"          CIUDAD_INS_EDU = iifNull(CIUDAD_INS_EDU, \"SIN DATO\"),",
						"          NIVEL_INS_EDU = iifNull(NIVEL_INS_EDU, \"SIN DATO\"),",
						"          AUD_FECHA_ADICION = iifNull(AUD_FECHA_ADICION, toTimestamp('1900-01-01T00:00:00Z')),",
						"          AUD_FECHA_MODIFICACION = iif(    isNull(AUD_FECHA_MODIFICACION) || toString(AUD_FECHA_MODIFICACION) == '',    toDate('1900-01-01'),    toDate(toString(AUD_FECHA_MODIFICACION, 'yyyy-MM-dd')))) ~> derivedColumn",
						"verificaciondeduplicados cast(output(",
						"          HASH as string,",
						"          CODIGO_INTERNO_INS_EDU as integer,",
						"          INSTITUCION_EDUCATIVA as string,",
						"          CATEGORIA_INSTITUCION as string,",
						"          TIPO_INSTITUCION as string,",
						"          PAIS_INS_EDU as string,",
						"          PROVINCIA_INS_EDU as string,",
						"          CIUDAD_INS_EDU as string,",
						"          NIVEL_INS_EDU as string,",
						"          AUD_FECHA_ADICION as date,",
						"          AUD_FECHA_MODIFICACION as date,",
						"          FECHA_ULTIMA_ACTUALIZACION as date,",
						"          LINAJE as string",
						"     ),",
						"     errors: true) ~> definciontipodecampo",
						"derivedColumn derive(HASH = md5(concat(toString(CODIGO_INTERNO_INS_EDU), INSTITUCION_EDUCATIVA, CATEGORIA_INSTITUCION, toString(TIPO_INSTITUCION), toString(PAIS_INS_EDU), toString(PROVINCIA_INS_EDU), toString(PROVINCIA_INS_EDU), CIUDAD_INS_EDU, toString(NIVEL_INS_EDU), toString(AUD_FECHA_ADICION))),",
						"          FECHA_ULTIMA_ACTUALIZACION = currentTimestamp(),",
						"          LINAJE = 'ins_alumno, cliente_local, ins_raza, ins_estado_civil') ~> actualizacionycreaciondelhash",
						"actualizacionycreaciondelhash aggregate(groupBy(HASH),",
						"     CODIGO_INTERNO_INS_EDU = max(CODIGO_INTERNO_INS_EDU),",
						"          INSTITUCION_EDUCATIVA = max(INSTITUCION_EDUCATIVA),",
						"          CATEGORIA_INSTITUCION = max(CATEGORIA_INSTITUCION),",
						"          TIPO_INSTITUCION = max(TIPO_INSTITUCION),",
						"          PAIS_INS_EDU = max(PAIS_INS_EDU),",
						"          PROVINCIA_INS_EDU = max(PROVINCIA_INS_EDU),",
						"          CIUDAD_INS_EDU = max(PROVINCIA_INS_EDU),",
						"          NIVEL_INS_EDU = max(NIVEL_INS_EDU),",
						"          AUD_FECHA_ADICION = max(AUD_FECHA_ADICION),",
						"          AUD_FECHA_MODIFICACION = max(AUD_FECHA_MODIFICACION),",
						"          FECHA_ULTIMA_ACTUALIZACION = max(FECHA_ULTIMA_ACTUALIZACION),",
						"          LINAJE = max(LINAJE)) ~> verificaciondeduplicados",
						"definciontipodecampo sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'parquet',",
						"     partitionFileNames:['DIM_INSTITUCION_FINAL.parquet'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_institucion_delta')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "DF_INSCRIPCIONES_MATRICULAS/DIM_INSTITUCION_EDUCATIVA"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DIM_INSTITUCION_PARQUET",
								"type": "DatasetReference"
							},
							"name": "source"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DIM_INSTITUCION_PARQUET",
								"type": "DatasetReference"
							},
							"name": "sink1",
							"description": "Export data to DIM_PERIODO_PARQUET"
						}
					],
					"transformations": [
						{
							"name": "derivedColumn"
						},
						{
							"name": "definciontipodecampo"
						},
						{
							"name": "actualizacionycreaciondelhash"
						},
						{
							"name": "verificaciondeduplicados"
						},
						{
							"name": "filter1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          CODIGO_INTERNO_INS_EDU as decimal(38,18),",
						"          INSTITUCION_EDUCATIVA as string,",
						"          CATEGORIA_INSTITUCION as string,",
						"          TIPO_INSTITUCION as string,",
						"          PAIS_INS_EDU as string,",
						"          PROVINCIA_INS_EDU as string,",
						"          CIUDAD_INS_EDU as string,",
						"          NIVEL_INS_EDU as string,",
						"          AUD_FECHA_ADICION as timestamp,",
						"          AUD_FECHA_MODIFICACION as timestamp",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> source",
						"source derive(CODIGO_INTERNO_INS_EDU = iifNull(CODIGO_INTERNO_INS_EDU, -1),",
						"          INSTITUCION_EDUCATIVA = iifNull(INSTITUCION_EDUCATIVA, \"SIN DATO\"),",
						"          CATEGORIA_INSTITUCION = iifNull(CATEGORIA_INSTITUCION, \"SIN DATO\"),",
						"          TIPO_INSTITUCION = iifNull(TIPO_INSTITUCION, \"SIN DATO\"),",
						"          PAIS_INS_EDU = iifNull(PAIS_INS_EDU, \"SIN DATO\"),",
						"          PROVINCIA_INS_EDU = iifNull(PROVINCIA_INS_EDU, \"SIN DATO\"),",
						"          CIUDAD_INS_EDU = iifNull(CIUDAD_INS_EDU, \"SIN DATO\"),",
						"          NIVEL_INS_EDU = iifNull(NIVEL_INS_EDU, \"SIN DATO\"),",
						"          AUD_FECHA_ADICION = iifNull(AUD_FECHA_ADICION, toTimestamp('1900-01-01T00:00:00Z')),",
						"          AUD_FECHA_MODIFICACION = iif(    isNull(AUD_FECHA_MODIFICACION) || toString(AUD_FECHA_MODIFICACION) == '',    toDate('1900-01-01'),    toDate(toString(AUD_FECHA_MODIFICACION, 'yyyy-MM-dd')))) ~> derivedColumn",
						"filter1 cast(output(",
						"          HASH as string,",
						"          CODIGO_INTERNO_INS_EDU as integer,",
						"          INSTITUCION_EDUCATIVA as string,",
						"          CATEGORIA_INSTITUCION as string,",
						"          TIPO_INSTITUCION as string,",
						"          PAIS_INS_EDU as string,",
						"          PROVINCIA_INS_EDU as string,",
						"          CIUDAD_INS_EDU as string,",
						"          NIVEL_INS_EDU as string,",
						"          AUD_FECHA_ADICION as date,",
						"          AUD_FECHA_MODIFICACION as date,",
						"          FECHA_ULTIMA_ACTUALIZACION as date,",
						"          LINAJE as string",
						"     ),",
						"     errors: true) ~> definciontipodecampo",
						"derivedColumn derive(HASH = md5(concat(toString(CODIGO_INTERNO_INS_EDU), INSTITUCION_EDUCATIVA, CATEGORIA_INSTITUCION, toString(TIPO_INSTITUCION), toString(PAIS_INS_EDU), toString(PROVINCIA_INS_EDU), toString(PROVINCIA_INS_EDU), CIUDAD_INS_EDU, toString(NIVEL_INS_EDU), toString(AUD_FECHA_ADICION))),",
						"          FECHA_ULTIMA_ACTUALIZACION = currentTimestamp(),",
						"          LINAJE = 'ins_alumno, cliente_local, ins_raza, ins_estado_civil') ~> actualizacionycreaciondelhash",
						"actualizacionycreaciondelhash aggregate(groupBy(HASH),",
						"     CODIGO_INTERNO_INS_EDU = max(CODIGO_INTERNO_INS_EDU),",
						"          INSTITUCION_EDUCATIVA = max(INSTITUCION_EDUCATIVA),",
						"          CATEGORIA_INSTITUCION = max(CATEGORIA_INSTITUCION),",
						"          TIPO_INSTITUCION = max(TIPO_INSTITUCION),",
						"          PAIS_INS_EDU = max(PAIS_INS_EDU),",
						"          PROVINCIA_INS_EDU = max(PROVINCIA_INS_EDU),",
						"          CIUDAD_INS_EDU = max(PROVINCIA_INS_EDU),",
						"          NIVEL_INS_EDU = max(NIVEL_INS_EDU),",
						"          AUD_FECHA_ADICION = max(AUD_FECHA_ADICION),",
						"          AUD_FECHA_MODIFICACION = max(AUD_FECHA_MODIFICACION),",
						"          FECHA_ULTIMA_ACTUALIZACION = max(FECHA_ULTIMA_ACTUALIZACION),",
						"          LINAJE = max(LINAJE)) ~> verificaciondeduplicados",
						"verificaciondeduplicados filter(AUD_FECHA_ADICION== FECHA_ULTIMA_ACTUALIZACION) ~> filter1",
						"definciontipodecampo sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'parquet',",
						"     partitionFileNames:['DIM_INSTITUCION_FINAL.parquet'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_institucion_procedencia')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "DF_INSCRIPCIONES_MATRICULAS/FAC_INSTITUCION_PROCEDENCIA"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "FAC_INSTITUCION_PARQUET",
								"type": "DatasetReference"
							},
							"name": "source"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "FAC_INSTITUCION_PARQUET",
								"type": "DatasetReference"
							},
							"name": "sink1",
							"description": "Export data to DIM_PERIODO_PARQUET"
						}
					],
					"transformations": [
						{
							"name": "derivedColumn"
						},
						{
							"name": "definciontipodecampo"
						},
						{
							"name": "actualizacionycreaciondelhash"
						},
						{
							"name": "verificaciondeduplicados"
						}
					],
					"scriptLines": [
						"source(output(",
						"          TITULO_BACHILLERATO as string,",
						"          FECHA_GRADUACION as timestamp,",
						"          CALIF_GRADUACION as decimal(38,18),",
						"          CALIF_SOBRE as decimal(38,18),",
						"          CODIGO_INTERNO_INS_EDU as decimal(38,18),",
						"          CODIGO_INTERNO_POSTULANTE as decimal(38,18),",
						"          AUD_FECHA_ADICION as timestamp,",
						"          AUD_FECHA_MODIFICACION as timestamp",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> source",
						"source derive(TITULO_BACHILLERATO = iifNull(TITULO_BACHILLERATO, \"SIN DATO\"),",
						"          FECHA_GRADUACION = iif(    isNull(FECHA_GRADUACION) || toString(FECHA_GRADUACION) == '',    toDate('1900-01-01'),    toDate(toString(FECHA_GRADUACION, 'yyyy-MM-dd'))),",
						"          CALIF_GRADUACION = iifNull(CALIF_GRADUACION, -1),",
						"          CALIF_SOBRE = iifNull(CALIF_SOBRE, -1),",
						"          CODIGO_INTERNO_INS_EDU = iifNull(CODIGO_INTERNO_INS_EDU, -1),",
						"          CODIGO_INTERNO_POSTULANTE = iifNull(CODIGO_INTERNO_POSTULANTE, -1),",
						"          AUD_FECHA_ADICION = iifNull(AUD_FECHA_ADICION, toTimestamp('1900-01-01T00:00:00Z')),",
						"          AUD_FECHA_MODIFICACION = iif(    isNull(AUD_FECHA_MODIFICACION) || toString(AUD_FECHA_MODIFICACION) == '',    toDate('1900-01-01'),    toDate(toString(AUD_FECHA_MODIFICACION, 'yyyy-MM-dd')))) ~> derivedColumn",
						"verificaciondeduplicados cast(output(",
						"          HASH as string,",
						"          TITULO_BACHILLERATO as string,",
						"          FECHA_GRADUACION as date,",
						"          CALIF_GRADUACION as integer,",
						"          CALIF_SOBRE as integer,",
						"          CODIGO_INTERNO_INS_EDU as integer,",
						"          CODIGO_INTERNO_POSTULANTE as integer,",
						"          AUD_FECHA_ADICION as date,",
						"          AUD_FECHA_MODIFICACION as date,",
						"          FECHA_ULTIMA_ACTUALIZACION as date,",
						"          LINAJE as string",
						"     ),",
						"     errors: true) ~> definciontipodecampo",
						"derivedColumn derive(HASH = md5(concat(toString(TITULO_BACHILLERATO), TITULO_BACHILLERATO, toString(CALIF_GRADUACION), toString(CALIF_SOBRE), toString(CODIGO_INTERNO_INS_EDU), toString(CODIGO_INTERNO_POSTULANTE), toString(CODIGO_INTERNO_POSTULANTE), toString(AUD_FECHA_ADICION))),",
						"          FECHA_ULTIMA_ACTUALIZACION = currentTimestamp(),",
						"          LINAJE = 'ins_alumno, cliente_local, ins_raza, ins_estado_civil') ~> actualizacionycreaciondelhash",
						"actualizacionycreaciondelhash aggregate(groupBy(HASH),",
						"     TITULO_BACHILLERATO = max(TITULO_BACHILLERATO),",
						"          FECHA_GRADUACION = max(FECHA_GRADUACION),",
						"          CALIF_GRADUACION = max(CALIF_GRADUACION),",
						"          CALIF_SOBRE = max(CALIF_SOBRE),",
						"          CODIGO_INTERNO_INS_EDU = max(CODIGO_INTERNO_INS_EDU),",
						"          CODIGO_INTERNO_POSTULANTE = max(CODIGO_INTERNO_POSTULANTE),",
						"          AUD_FECHA_ADICION = max(AUD_FECHA_ADICION),",
						"          AUD_FECHA_MODIFICACION = max(AUD_FECHA_MODIFICACION),",
						"          FECHA_ULTIMA_ACTUALIZACION = max(FECHA_ULTIMA_ACTUALIZACION),",
						"          LINAJE = max(LINAJE)) ~> verificaciondeduplicados",
						"definciontipodecampo sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'parquet',",
						"     partitionFileNames:['FAC_INSTITUCION_FINAL.parquet'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/FAC_INSTITUCION_PARQUET')]"
			]
		}
	]
}