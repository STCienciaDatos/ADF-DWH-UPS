{
	"name": "df_postulantes_full",
	"properties": {
		"folder": {
			"name": "DF_INSCRIPCIONES_MATRICULAS/DIM_POSTULANTES"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DIM_POSTULANTE_PARQUET",
						"type": "DatasetReference"
					},
					"name": "source"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DIM_POSTULANTE_PARQUET_FINAL",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "derivedColumn2"
				},
				{
					"name": "vericacionduplicados"
				},
				{
					"name": "definciontipodecampo"
				},
				{
					"name": "actualizacionycreaciondelhash"
				}
			],
			"scriptLines": [
				"source(output(",
				"          codigo_interno_pos_alu as integer,",
				"          tipo_identificacion as string,",
				"          nro_identificacion as string,",
				"          nombres as string,",
				"          apellidos as string,",
				"          correo_personal as string,",
				"          correo_institucional as string,",
				"          genero as string,",
				"          etnia as string,",
				"          estado_civil as string,",
				"          fecha_nacimiento as timestamp,",
				"          telefono as string,",
				"          celular as string,",
				"          indicador_extranjero as string,",
				"          nacionalidad as string,",
				"          tiene_discapacidad as string,",
				"          sufre_enfermedad_catastrofica as string,",
				"          estudiante_tiene_trastorno_aprendizaje as string,",
				"          aud_fecha_adicion as timestamp,",
				"          aud_fecha_modificacion as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet') ~> source",
				"source derive(codigo_interno_pos_alu = iifNull(codigo_interno_pos_alu, -1),",
				"          tipo_identificacion = iifNull(tipo_identificacion, \"SIN DATO\"),",
				"          nro_identificacion = iifNull(nro_identificacion, \"SIN DATO\"),",
				"          nombres = iifNull(nombres, \"SIN DATO\"),",
				"          apellidos = iifNull(apellidos, \"SIN DATO\"),",
				"          correo_personal = iifNull(correo_personal, \"SIN DATO\"),",
				"          correo_institucional = iifNull(correo_institucional, \"SIN DATO\"),",
				"          genero = iifNull(genero, \"SIN DATO\"),",
				"          etnia = iifNull(etnia, \"SIN DATO\"),",
				"          estado_civil = iifNull(estado_civil, \"SIN DATO\"),",
				"          fecha_nacimiento = iifNull(fecha_nacimiento, toTimestamp('1900-01-01T00:00:00Z')),",
				"          telefono = iifNull(telefono, \"SIN DATO\"),",
				"          celular = iifNull(celular, \"SIN DATO\"),",
				"          indicador_extranjero = iifNull(indicador_extranjero, \"FALSE\"),",
				"          nacionalidad = iifNull(nacionalidad, \"SIN DATO\"),",
				"          tiene_discapacidad = iifNull(tiene_discapacidad, \"FALSE\"),",
				"          sufre_enfermedad_catastrofica = iifNull(sufre_enfermedad_catastrofica, \"FALSE\"),",
				"          estudiante_tiene_trastorno_aprendizaje = iifNull(estudiante_tiene_trastorno_aprendizaje, \"FALSE\"),",
				"          aud_fecha_adicion = iif(",
				"    isNull(aud_fecha_adicion) || toString(aud_fecha_adicion) == '',",
				"    toDate('1900-01-01'),",
				"    toDate(toString(aud_fecha_adicion, 'yyyy-MM-dd'))",
				"),",
				"          aud_fecha_modificacion = iif(",
				"    isNull(aud_fecha_modificacion) || toString(aud_fecha_modificacion) == '',",
				"    toDate('1900-01-01'),",
				"    toDate(toString(aud_fecha_modificacion, 'yyyy-MM-dd'))",
				")) ~> derivedColumn2",
				"actualizacionycreaciondelhash aggregate(groupBy(HASH),",
				"     codigo_interno_pos_alu = max(codigo_interno_pos_alu),",
				"          tipo_identificacion = max(tipo_identificacion),",
				"          nro_identificacion = max(nro_identificacion),",
				"          nombres = max(nombres),",
				"          apellidos = max(apellidos),",
				"          correo_personal = max(correo_personal),",
				"          correo_institucional = max(correo_institucional),",
				"          genero = max(genero),",
				"          etnia = max(etnia),",
				"          estado_civil = max(estado_civil),",
				"          fecha_nacimiento = max(fecha_nacimiento),",
				"          telefono = max(telefono),",
				"          celular = max(celular),",
				"          indicador_extranjero = max(indicador_extranjero),",
				"          nacionalidad = max(nacionalidad),",
				"          tiene_discapacidad = max(tiene_discapacidad),",
				"          sufre_enfermedad_catastrofica = max(sufre_enfermedad_catastrofica),",
				"          estudiante_tiene_trastorno_aprendizaje = max(estudiante_tiene_trastorno_aprendizaje),",
				"          aud_fecha_adicion = max(aud_fecha_adicion),",
				"          aud_fecha_modificacion = max(aud_fecha_modificacion),",
				"          FECHA_ULTIMA_ACTUALIZACION = max(FECHA_ULTIMA_ACTUALIZACION),",
				"          LINAJE = max(LINAJE)) ~> vericacionduplicados",
				"vericacionduplicados cast(output(",
				"          HASH as string,",
				"          indicador_extranjero as boolean,",
				"          tiene_discapacidad as boolean,",
				"          sufre_enfermedad_catastrofica as boolean,",
				"          estudiante_tiene_trastorno_aprendizaje as boolean,",
				"          aud_fecha_adicion as date,",
				"          aud_fecha_modificacion as date,",
				"          FECHA_ULTIMA_ACTUALIZACION as date,",
				"          LINAJE as string",
				"     ),",
				"     errors: true) ~> definciontipodecampo",
				"derivedColumn2 derive(HASH = md5(concat(toString(codigo_interno_pos_alu),tipo_identificacion,nro_identificacion,nombres,apellidos,correo_personal,correo_institucional,genero,etnia,estado_civil,toString(fecha_nacimiento),telefono,celular,toString(indicador_extranjero), nacionalidad, toString(tiene_discapacidad), toString(sufre_enfermedad_catastrofica),toString(estudiante_tiene_trastorno_aprendizaje), toString(aud_fecha_adicion), toString(aud_fecha_modificacion))),",
				"          FECHA_ULTIMA_ACTUALIZACION = currentTimestamp(),",
				"          LINAJE = 'ins_alumno, cliente_local, ins_raza, ins_estado_civil') ~> actualizacionycreaciondelhash",
				"definciontipodecampo sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          Hash as string,",
				"          PK_PERSONA as integer,",
				"          TIPO_IDENTIFICACION_PERSONA as string,",
				"          NOMBRES_PERSONA as string,",
				"          PRIMER_APELLIDO_PERSONA as string,",
				"          SEGUNDO_APELLIDO_PERSONA as string,",
				"          CORREO_PERSONA as string,",
				"          TELEFONO_PERSONA as string,",
				"          GENERO_PERSONA as string,",
				"          INDICADOR_EXTRANJERO_PERSONA as string,",
				"          INDICADOR_DISCAPACIDAD_PERSONA as string,",
				"          TIPO_DISCAPACIDAD_PERSONA as string,",
				"          FECHA_NACIMIENTO_PERSONA as timestamp,",
				"          DateUpdate as timestamp",
				"     ),",
				"     format: 'parquet',",
				"     partitionFileNames:['POSTULANTES_FINAL.parquet'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> sink1"
			]
		}
	}
}